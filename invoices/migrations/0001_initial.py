# Generated by Django 4.2.5 on 2023-12-11 01:50

import accounts.services.validators
import datetime
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        help_text="Organization name in english", max_length=255
                    ),
                ),
                (
                    "tax_number",
                    models.CharField(
                        max_length=15,
                        null=True,
                        validators=[
                            accounts.services.validators.NumericLengthValidator(
                                field_name="Tax Number", length=15
                            )
                        ],
                    ),
                ),
                (
                    "street",
                    models.CharField(
                        help_text="Street name in english", max_length=255, null=True
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        help_text="City name in english", max_length=255, null=True
                    ),
                ),
                ("phone", models.CharField(max_length=30)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "building_number",
                    models.CharField(
                        max_length=4,
                        null=True,
                        validators=[
                            accounts.services.validators.NumericLengthValidator(
                                field_name="Building Number", length=4
                            )
                        ],
                    ),
                ),
                (
                    "postal_zone",
                    models.CharField(
                        max_length=5,
                        null=True,
                        validators=[
                            accounts.services.validators.NumericLengthValidator(
                                field_name="Postal Zone", length=5
                            )
                        ],
                    ),
                ),
                ("district_name", models.CharField(max_length=100, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customers",
                        to="accounts.account",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                (
                    "invoice_type",
                    models.CharField(
                        choices=[
                            ("simplified", "Simplified"),
                            ("standard", "Standard"),
                        ],
                        default="simplified",
                        max_length=255,
                    ),
                ),
                (
                    "invoice_code",
                    models.CharField(
                        choices=[
                            ("invoice", "Invoice"),
                            ("debit", "debit"),
                            ("credit", "credit"),
                        ],
                        default="invoice",
                        max_length=255,
                    ),
                ),
                ("invoice_number", models.PositiveBigIntegerField(null=True)),
                ("invoice_pk", models.CharField(max_length=255, null=True)),
                ("delivery_date", models.DateField(default=datetime.date.today)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("10", "Cash"),
                            ("30", "Credit"),
                            ("42", "bank_account"),
                            ("48", "bank_card"),
                        ],
                        max_length=255,
                    ),
                ),
                ("qrcode", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("reported", "Reported"),
                            ("cleared", "Cleared"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "sub_total",
                    models.DecimalField(decimal_places=2, max_digits=500, null=True),
                ),
                (
                    "vat_amount",
                    models.DecimalField(decimal_places=2, max_digits=500, null=True),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=500
                    ),
                ),
                (
                    "discount_type",
                    models.CharField(
                        choices=[("amount", "Amount"), ("percentage", "Percentage")],
                        default="amount",
                        max_length=255,
                    ),
                ),
                (
                    "total_after_discount",
                    models.DecimalField(decimal_places=2, max_digits=500, null=True),
                ),
                (
                    "total_after_vat",
                    models.DecimalField(decimal_places=2, max_digits=500, null=True),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to="accounts.account",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        help_text="Customer is required only for standard invoice",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="invoices",
                        to="invoices.customer",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InvoiceCustomer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("organization", models.CharField(max_length=255)),
                (
                    "tax_number",
                    models.CharField(
                        max_length=15,
                        null=True,
                        validators=[
                            accounts.services.validators.NumericLengthValidator(
                                field_name="Tax Number", length=15
                            )
                        ],
                    ),
                ),
                ("city", models.CharField(max_length=255, null=True)),
                ("street", models.CharField(max_length=255, null=True)),
                ("phone", models.CharField(max_length=30)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "building_number",
                    models.CharField(
                        max_length=4,
                        null=True,
                        validators=[
                            accounts.services.validators.NumericLengthValidator(
                                field_name="Building Number", length=4
                            )
                        ],
                    ),
                ),
                (
                    "postal_zone",
                    models.CharField(
                        max_length=5,
                        null=True,
                        validators=[
                            accounts.services.validators.NumericLengthValidator(
                                field_name="Postal Zone", length=5
                            )
                        ],
                    ),
                ),
                ("district_name", models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price in SAR. Before VAT",
                        max_digits=200,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("1.00"))
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="accounts.account",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InvoiceItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("price", models.DecimalField(decimal_places=2, max_digits=200)),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "vat",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="VAT percentage",
                        max_digits=3,
                        null=True,
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=200
                    ),
                ),
                (
                    "sub_total",
                    models.DecimalField(decimal_places=2, max_digits=400, null=True),
                ),
                (
                    "vat_amount",
                    models.DecimalField(decimal_places=2, max_digits=400, null=True),
                ),
                (
                    "total",
                    models.DecimalField(decimal_places=2, max_digits=400, null=True),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="invoices.invoice",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        to="invoices.product",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="invoice",
            name="customer_info",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="invoices",
                to="invoices.invoicecustomer",
            ),
        ),
    ]
